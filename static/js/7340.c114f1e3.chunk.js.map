{"version":3,"file":"static/js/7340.c114f1e3.chunk.js","mappings":"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","sources":["views/Settings/UserForm.js","views/Settings/Users.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { getCookie } from '../../components/Config';\r\nimport {\r\n     CInputGroupText, CButton, CButtonGroup,\r\n     CCol, CForm, CFormInput, CInputGroup, \r\n     CFormSelect, CRow\r\n} from '@coreui/react'\r\n\r\nconst UserForm = (props) => {\r\n    const [user, setUser] = useState(JSON.parse(getCookie(\"userdetails\")));\r\n    return (\r\n        <div className=\"full-screen\">\r\n            <CRow className=\"justify-content-center\">\r\n                <CCol md={8} lg={6} xl={5}>\r\n                    <CForm className=\"row g-3 m-5\">\r\n                        <div>\r\n                            <CButtonGroup role=\"group\" className=\"float-end\" aria-label=\"Basic mixed styles example\">\r\n                                <CButton color=\"light\" onClick={() => props.controlUserForm(true)} shape=\"rounded-pill\" style={{backgroundColor: '#ecebeb', color: '#000', borderColor: 'white'}}> <FontAwesomeIcon icon={faTimes} size=\"lg\" customClassName=\"nav-icon\" /></CButton>\r\n                            </CButtonGroup>\r\n                            <h4>{user.id ? \"Edit\" : \"Add\"} a User</h4>\r\n                        </div>\r\n                        <CCol xs={12}>\r\n                            <CFormInput id=\"firstname\" value={user.firstname} placeholder=\"First name\" size=\"lg\" />\r\n                        </CCol>\r\n                        <CCol xs={12}>\r\n                            <CFormInput id=\"lastname\" value={user.lastname} placeholder=\"Last name\" size=\"lg\" />\r\n                        </CCol>\r\n                        <CCol xs={12}>\r\n                            <CFormInput id=\"email\" value={user.email} placeholder=\"Email\" size=\"lg\" autoComplete=\"email\" />\r\n                        </CCol>\r\n\r\n                        <CCol md={12}>\r\n                            <CInputGroup>\r\n                                <CInputGroupText id=\"inputGroup-1\">Role</CInputGroupText>\r\n                                <CFormSelect id=\"role\" size=\"lg\" value={user.role}>\r\n                                    <option></option>\r\n                                    <option value=\"Full Admin\">Full Admin</option>\r\n                                    <option value=\"Read Only\">Read Only</option>\r\n                                </CFormSelect>\r\n                            </CInputGroup>\r\n                        </CCol>\r\n\r\n                        <div className=\"d-grid mb-3\">\r\n                            <CButton color=\"dark\" style={{ backgroundColor: 'black' }} size=\"lg\"> &nbsp;&nbsp;{user.id ? \"Save\" : \"Add User\"}&nbsp;&nbsp; </CButton>\r\n                        </div>\r\n                    </CForm>\r\n                </CCol>\r\n            </CRow>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default UserForm\r\n","import React, { useState } from 'react'\r\nimport {\r\n  CCard,\r\n  CFormInput,\r\n  CBadge,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCol,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport {\r\n  CSmartTable\r\n} from '@coreui/react-pro'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash, faUserPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport {setCookie} from '../../components/Config';\r\nimport UserForm from './UserForm'\r\n\r\nconst Users = () => {\r\n  const [details, setDetails] = useState([])\r\n  const [isNotHidden, setIsNotHidden] = useState(false)\r\n  const [editData, setEditData] = useState({})\r\n\r\nconst getSelected =(data) =>{\r\n  if(data.length > 0){\r\n  const lastItem = data[data.length - 1]; \r\n  setEditData(lastItem)\r\n  }else{\r\n    setEditData({})\r\n  }\r\n}\r\n\r\n  const columns = [\r\n    {\r\n      key: 'firstname',\r\n      label: 'Name',\r\n      _style: { width: '20%' },\r\n      //_props: { color: 'secondary', className: 'fw-semibold' },\r\n    },\r\n    {\r\n      key: 'email',\r\n      _style: { width: '40%' },\r\n      //_props: { color: 'secondary', className: 'fw-semibold' },\r\n    },\r\n    { key: 'role', _style: { width: '20%' } },\r\n    { key: 'last_login', filter: true, sorter: false, _style: { width: '40%' } },\r\n    //{ key: 'role', filter: false, sorter: false, _style: { width: '20%' } },\r\n    \r\n    // {\r\n    //   key: 'show_details',\r\n    //   label: '',\r\n    //   _style: { width: '20%' },\r\n    //   filter: false,\r\n    //   sorter: false,\r\n    //   // _props: { color: 'secondary', className: 'fw-semibold' },\r\n    // },\r\n  ]\r\n  const controlUserForm = (val) => {\r\n    setIsNotHidden(!val)\r\n  }\r\n\r\n  const usersData = [\r\n    { id: 24, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n    _props: { align: 'middle', height: '60px' }, },\r\n    {\r\n      id: 1, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n       _props: { align: 'middle', height: '60px' },\r\n    },\r\n    {\r\n      id: 2, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Read Only', last_login: '11 Jan 2023 15:51',\r\n      _props: { align: 'middle', height: '60px' },\r\n      // _cellProps: { all: { className: 'fw-semibold' }, title: { color: 'info' } },\r\n    },\r\n    { id: 3, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Read Only', last_login: '11 Jan 2023 15:51',\r\n    _props: { align: 'middle', height: '60px' }, },\r\n    {\r\n      id: 4, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n      _props: { align: 'middle', height: '60px' },\r\n    },\r\n    { id: 5, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n    _props: { align: 'middle', height: '60px' }, },\r\n    { id: 6, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n    _props: { align: 'middle', height: '60px' }, },\r\n    // {\r\n    //   id: 7,\r\n    //   firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n    //   //_props: { color: 'warning', align: 'middle' },\r\n    // },\r\n    // { id: 8, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Read Only', last_login: '11 Jan 2023 15:51' },\r\n    // { id: 9, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Read Only', last_login: '11 Jan 2023 15:51' },\r\n    // { id: 10, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51' },\r\n    // { id: 11, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51' },\r\n    // {\r\n    //   id: 12, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n    //   //_selected: true \r\n    // },\r\n    // { id: 13, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51' },\r\n    // {\r\n    //   id: 14,\r\n    //   firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Read Only', last_login: '11 Jan 2023 15:51',\r\n    // },\r\n    // { id: 15, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Read Only', last_login: '11 Jan 2023 15:51' },\r\n    // { id: 16, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51' },\r\n    // { id: 17, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51' },\r\n    // {\r\n    //   id: 18,\r\n    //   firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n    // },\r\n    // {\r\n    //   id: 19,\r\n    //   firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n    // },\r\n    // { id: 20, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Read Only', last_login: '11 Jan 2023 15:51' },\r\n    // { id: 21, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Read Only', last_login: '11 Jan 2023 15:51' },\r\n    // { id: 22, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51' },\r\n    // { id: 23, firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51' },\r\n    // {\r\n    //   id: 42,\r\n    //   firstname: 'Dorothy', lastname: 'Asare', email: 'dorothy.asare@hello.com', role: 'Full Admin', last_login: '11 Jan 2023 15:51',\r\n    // },\r\n  ]\r\n  const getBadge = (status) => {\r\n    switch (status) {\r\n      case 'Open':\r\n        return 'success'\r\n      case 'Closed':\r\n        return 'secondary'\r\n      case 'Draft':\r\n        return 'warning'\r\n      case 'Banned':\r\n        return 'danger'\r\n      default:\r\n        return 'primary'\r\n    }\r\n  }\r\n\r\n  const getFullName = (row) => {\r\n    return row.firstname + ' ' + row.lastname\r\n}\r\n\r\n  const GoToUserDetails = (row) => {\r\n    setCookie(\"userdetails\", JSON.stringify(row));\r\n    controlUserForm(false);\r\n}\r\n\r\n  const toggleDetails = (index) => {\r\n    const position = details.indexOf(index)\r\n    let newDetails = details.slice()\r\n    if (position !== -1) {\r\n      newDetails.splice(position, 1)\r\n    } else {\r\n      newDetails = [...details, index]\r\n    }\r\n    setDetails(newDetails)\r\n  }\r\n  return (\r\n    <CRow>\r\n      {isNotHidden && <UserForm controlUserForm={controlUserForm} />}\r\n      <CCol xs={12}>\r\n            <div className=\"mb-4 \">\r\n              <br />\r\n              <CButtonGroup role=\"group\" className=\"float-end\" aria-label=\"Basic mixed styles example\">\r\n              {editData.id == undefined && <CButton style={{backgroundColor: 'black'}} onClick={() => GoToUserDetails({ id: 0, firstname: '', lastname: '', email: '', role: '', last_login: null })}> <FontAwesomeIcon icon={faUserPlus} customClassName=\"nav-icon\" /> Add</CButton>}\r\n              {editData.id != undefined && <CButton style={{backgroundColor: '#ecebeb', color: '#000', borderColor: 'white'}} onClick={() => GoToUserDetails(editData)}> <FontAwesomeIcon icon={faEdit} customClassName=\"nav-icon\" /> Edit</CButton>}\r\n              {editData.id != undefined && <CButton style={{backgroundColor: '#ecebeb', color: '#000', borderColor: 'white'}} onClick={() => GoToUserDetails(editData)}> <FontAwesomeIcon icon={faTrash} customClassName=\"nav-icon\" /> Delete</CButton>}\r\n              </CButtonGroup>\r\n            <CCol xs={4} className=\"mb-5 mr-2\">\r\n            <CFormInput type=\"text\" id=\"validationServer03\" placeholder=\"search by name and email\"  />\r\n            </CCol>\r\n              <CSmartTable\r\n                activePage={1}\r\n                //cleaner\r\n                clickableRows\r\n                columns={columns}\r\n                //columnFilter\r\n                columnSorter\r\n                //footer\r\n                items={usersData}\r\n                // itemsPerPageSelect\r\n                // itemsPerPage={5}\r\n                // pagination\r\n                scopedColumns={{\r\n                  status: (item) => (\r\n                    <td>\r\n                      <CBadge color={getBadge(item.status)}>{item.status}</CBadge>\r\n                    </td>\r\n                  ),\r\n                  firstname: (item) => (\r\n                    <td>\r\n                      {getFullName(item)}\r\n                    </td>\r\n                  ),\r\n                  show_details: (item) => {\r\n                    return (\r\n                      <td className=\"py-2\">\r\n                        <CButtonGroup role=\"group\" className=\"float-end\" aria-label=\"Basic mixed styles example\">\r\n                        <CButton \r\n                        color=\"warning\"\r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                            GoToUserDetails(item)\r\n                        }}\r\n                        >\r\n                          <FontAwesomeIcon icon={faEdit} customClassName=\"nav-icon\" />\r\n                        </CButton>\r\n                        <CButton \r\n                        color=\"danger\" \r\n                        size=\"sm\"\r\n                        onClick={() => {\r\n                            toggleDetails(item.id)\r\n                          }}>\r\n                         <FontAwesomeIcon icon={faTrash} customClassName=\"nav-icon\" />\r\n                        </CButton>\r\n                         </CButtonGroup>\r\n                      </td>\r\n                    )\r\n                  },\r\n                  // details: (item) => {\r\n                  //   return (\r\n                  //     <CCollapse visible={details.includes(item.id)}>\r\n                  //       <CCardBody className=\"p-3\">\r\n                  //         <h4>{item.username}</h4>\r\n                  //         <p className=\"text-muted\">User since: {item.registered}</p>\r\n                  //         <CButton size=\"sm\" color=\"info\">\r\n                  //           User Settings\r\n                  //         </CButton>\r\n                  //         <CButton size=\"sm\" color=\"danger\" className=\"ml-1\">\r\n                  //           Delete\r\n                  //         </CButton>\r\n                  //       </CCardBody>\r\n                  //     </CCollapse>\r\n                  //   )\r\n                  // },\r\n                }}\r\n                selectable\r\n                sorterValue={{ column: 'name', state: 'asc' }}\r\n                onSelectedItemsChange={getSelected}\r\n                //tableFilter\r\n                tableHeadProps={{\r\n                  color: 'light',\r\n                }}\r\n                tableProps={{\r\n                  hover: true,\r\n                }}\r\n              />\r\n            </div>\r\n      </CCol>\r\n      \r\n    </CRow>\r\n  )\r\n}\r\n\r\nexport default Users\r\n"],"names":["props","_useState","useState","JSON","parse","getCookie","_useState2","_slicedToArray","user","_jsx","className","children","CRow","CCol","md","lg","xl","_jsxs","CForm","CButtonGroup","role","CButton","color","onClick","controlUserForm","shape","style","backgroundColor","borderColor","FontAwesomeIcon","icon","faTimes","size","customClassName","id","xs","CFormInput","value","firstname","placeholder","lastname","email","autoComplete","CInputGroup","CInputGroupText","CFormSelect","details","setDetails","_useState3","_useState4","isNotHidden","setIsNotHidden","_useState5","_useState6","editData","setEditData","val","getBadge","status","GoToUserDetails","row","setCookie","stringify","UserForm","undefined","last_login","faUserPlus","faEdit","faTrash","type","CSmartTable","activePage","clickableRows","columns","key","label","_style","width","filter","sorter","columnSorter","items","_props","align","height","scopedColumns","item","CBadge","show_details","index","position","indexOf","newDetails","slice","splice","concat","_toConsumableArray","toggleDetails","selectable","sorterValue","column","state","onSelectedItemsChange","data","length","lastItem","tableHeadProps","tableProps","hover"],"sourceRoot":""}